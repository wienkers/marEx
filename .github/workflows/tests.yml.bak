name: Tests

on:
  push:
    branches: [ main, advanced_preproc ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libhdf5-dev libnetcdf-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Configure Dask for CI
      run: |
        mkdir -p ~/.dask
        echo "distributed:" > ~/.dask/config.yaml
        echo "  worker:" >> ~/.dask/config.yaml
        echo "    memory:" >> ~/.dask/config.yaml
        echo "      target: 0.8" >> ~/.dask/config.yaml
        echo "      spill: 0.9" >> ~/.dask/config.yaml
        echo "      pause: 0.95" >> ~/.dask/config.yaml
        echo "      terminate: 0.98" >> ~/.dask/config.yaml
        echo "  admin:" >> ~/.dask/config.yaml
        echo "    log-format: '%(name)s - %(levelname)s - %(message)s'" >> ~/.dask/config.yaml

    - name: List installed packages
      run: pip list

    - name: Run preprocessing tests for gridded data
      run: |
        pytest tests/test_gridded_preprocessing.py -v --tb=short

    - name: Run preprocessing tests for unstructured data
      run: |
        pytest tests/test_unstructured_preprocessing.py -v --tb=short

    - name: Run tracking tests for gridded data
      run: |
        pytest tests/test_gridded_tracking.py -v --tb=short

    - name: Generate coverage report
      run: |
        pip install coverage
        coverage run -m pytest tests/
        coverage report -m
        coverage html
        coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      if: matrix.python-version == '3.10'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage to artifacts
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.10'
      with:
        name: coverage-report
        path: htmlcov/
