[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "marEx"
authors = [
    {name = "Aaron Wienkers", email = "aaron@wienkers.com"},
]
description = "Marine Extremes Detection and Tracking"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = [
    "numpy",
    "xarray[complete]",
    "dask[complete]==2025.3.0",
    "netcdf4",
    "scipy",
    "scikit-image",
    "dask_image",
    "pandas",
    "numba",
    "pillow",
    "xhistogram",
    "flox>=0.10.1",
    "matplotlib",
    "cartopy",
    "ffmpeg",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "flake8",
]
full = [
    "jax",
    "jaxlib",
    "dask_jobqueue",
]

[project.urls]
"Homepage" = "https://github.com/wienkers/marEx"
"Bug Tracker" = "https://github.com/wienkers/marEx/issues"

[tool.setuptools]
packages = ["marEx"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["marEx"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
